<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
    PolicySchemaVersion="0.3.0.0"
    TenantId="contoso.onmicrosoft.com"
    PolicyId="B2C_1A_TakeUrlQueryParamCustomPolicy"
    PublicPolicyUri="http://contoso.onmicrosoft.com/B2C_1A_TakeUrlQueryParamCustomPolicy">

    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="objectId">
                <DisplayName>unique object Id for subject of the claims being returned</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="retrievedQueryParamClaim">
                <DisplayName>RetrievedQueryParamClaim</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>RetrievedQueryParamClaim</UserHelpText>
                <UserInputType>Readonly</UserInputType>
            </ClaimType>

            <ClaimType Id="emailAddress">
                <DisplayName>Email</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email"/>
                </DefaultPartnerClaimTypes>
                <UserHelpText>Email</UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;'^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Please enter a valid email address"/>
                </Restriction>
            </ClaimType>

            <ClaimType Id="givenName">
                <DisplayName>Your name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your name</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="surname">
                <DisplayName>Your surname</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your surname</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="password">
                <DisplayName>Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter password</AdminHelpText>
                <UserHelpText>Enter password</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword" />
            </ClaimType>

            <ClaimType Id="reenterPassword">
                <DisplayName>Confirm Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Confirm password</AdminHelpText>
                <UserHelpText>Confirm password</UserHelpText>
                <UserInputType>Password</UserInputType>
            </ClaimType>

            <ClaimType Id="privacyPolicyAgreement">
                <DisplayName>Privacy Policy and Terms and Conditions</DisplayName>
                <DataType>boolean</DataType>
                <UserInputType>CheckboxMultiSelect</UserInputType>
                <Restriction>
                    <Enumeration Text="I have read and agree to the Privacy Policy and Terms and Conditions" Value="true" SelectByDefault="false" />
                </Restriction>
            </ClaimType>

            <ClaimType Id="displayName">
                <DisplayName>Display Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your display name</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
        </ClaimsSchema>

        <Predicates>
            <Predicate Id="IsLengthBetween8And64" Method="IsLengthRange" HelpText="The password must be between 8 and 64 characters.">
                <Parameters>
                <Parameter Id="Minimum">8</Parameter>
                <Parameter Id="Maximum">64</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Lowercase" Method="IncludesCharacters" HelpText="a lowercase letter">
                <Parameters>
                <Parameter Id="CharacterSet">a-z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Uppercase" Method="IncludesCharacters" HelpText="an uppercase letter">
                <Parameters>
                <Parameter Id="CharacterSet">A-Z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Number" Method="IncludesCharacters" HelpText="a digit">
                <Parameters>
                <Parameter Id="CharacterSet">0-9</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Symbol" Method="IncludesCharacters" HelpText="a symbol">
                <Parameters>
                <Parameter Id="CharacterSet">@#$%^&amp;*\-_+=[]{}|\\:',.?/`~"();!</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="DisallowedWhitespace" Method="MatchesRegex" HelpText="The password must not begin or end with a whitespace character.">
                <Parameters>
                <Parameter Id="RegularExpression">(^\S.*\S$)|(^\S+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>
        </Predicates>

        <PredicateValidations>
            <PredicateValidation Id="StrongPassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace"/>
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="LengthGroup">
                        <PredicateReferences>
                            <PredicateReference Id="IsLengthBetween8And64"/>
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="CharacterClasses">
                        <UserHelpText>The password must have at least 3 of the following:</UserHelpText>
                        <PredicateReferences MatchAtLeast="3">
                            <PredicateReference Id="Lowercase"/>
                            <PredicateReference Id="Uppercase"/>
                            <PredicateReference Id="Number"/>
                            <PredicateReference Id="Symbol"/>
                        </PredicateReferences>
                    </PredicateGroup>
                </PredicateGroups>
            </PredicateValidation>
        </PredicateValidations>

        <ClaimsTransformations>
            <ClaimsTransformation Id="GenerateRandomObjectIdTransformation" TransformationMethod="CreateRandomString">
                <InputParameters>
                <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID"/>
                </InputParameters>
                <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateDisplayNameTransformation" TransformationMethod="FormatStringMultipleClaims">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputClaim1"/>
                    <InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputClaim2"/>
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="{0} {1}"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>
        </ClaimsTransformations>

        <ContentDefinitions>
            <ContentDefinition Id="SelfAssertedContentDefinition">
                <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.7</DataUri>
            </ContentDefinition>
        </ContentDefinitions>
    </BuildingBlocks>

    <ClaimsProviders>
        <ClaimsProvider>
            <DisplayName>Token Issuer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                <DisplayName>JWT Issuer</DisplayName>
                <Protocol Name="None" />
                <OutputTokenFormat>JWT</OutputTokenFormat>
                <Metadata>
                    <Item Key="client_id">{service:te}</Item>
                    <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
                    <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                </Metadata>
                <CryptographicKeys>
                    <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                    <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer" />
                </CryptographicKeys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <!-- The technical profile(s) defined in this section is required by the framework to be included in all custom policies. -->
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                <Protocol Name="None" />
                <Metadata>
                    <Item Key="url">{service:te}</Item>
                </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Technical Profiles to generate claims</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="ClaimGenerator">
                    <DisplayName>Generate Object ID, displayName, Technical Profile.</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="GenerateRandomObjectIdTransformation"/>
                        <OutputClaimsTransformation ReferenceId="CreateDisplayNameTransformation"/>
                    </OutputClaimsTransformations>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Session Management</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SM-Noop">
                    <DisplayName>Noop Session Management Provider</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.NoopSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Technical Profiles to collect user's details</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInformationCollector">
                    <DisplayName>Collect User Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="retrievedQueryParamClaim" AlwaysUseDefaultValue="true" DefaultValue="{OIDC:AuthenticationContextReferences}" />
                    </InputClaims>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="emailAddress" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="surname" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="password" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="privacyPolicyAgreement" Required="true"/>
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="retrievedQueryParamClaim" />
                        <OutputClaim ClaimTypeReferenceId="emailAddress"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="password"/>
                        <OutputClaim ClaimTypeReferenceId="reenterPassword"/>
                        <OutputClaim ClaimTypeReferenceId="privacyPolicyAgreement"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
    </ClaimsProviders>

    <UserJourneys>
        <UserJourney Id="SignUpJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="GetUserInformationClaimsExchange" TechnicalProfileReferenceId="UserInformationCollector"/>
                    </ClaimsExchanges>
                </OrchestrationStep>
                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="GetMessageClaimsExchange" TechnicalProfileReferenceId="ClaimGenerator"/>
                    </ClaimsExchanges>
                </OrchestrationStep>
                <OrchestrationStep Order="3" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>
            </OrchestrationSteps>
        </UserJourney>
    </UserJourneys>

    <RelyingParty>
        <DefaultUserJourney ReferenceId="SignUpJourney"/>

        <UserJourneyBehaviors>
            <ScriptExecution>Allow</ScriptExecution>
        </UserJourneyBehaviors>

        <TechnicalProfile Id="SignUpProfile">
            <DisplayName>Sign Up Profile</DisplayName>
            <Protocol Name="OpenIdConnect" />
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
                <OutputClaim ClaimTypeReferenceId="retrievedQueryParamClaim"/>
                <OutputClaim ClaimTypeReferenceId="emailAddress" />
                <OutputClaim ClaimTypeReferenceId="displayName"/>
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub" />
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>